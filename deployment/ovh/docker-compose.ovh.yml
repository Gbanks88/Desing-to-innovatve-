version: '3.8'

services:
  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile.prod
    restart: always
    environment:
      - NODE_ENV=production
      - VITE_API_URL=https://api.yourfashionapp.com
    networks:
      - app_network

  backend:
    build:
      context: ../../backend
      dockerfile: Dockerfile.prod
    restart: always
    environment:
      - ENVIRONMENT=production
      - MONGODB_URL=${MONGODB_URL}
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      - backend_data:/app/data
    networks:
      - app_network

  mongodb:
    image: mongo:latest
    restart: always
    command: ["--bind_ip_all", "--replSet", "rs0"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - db_network

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./ssl:/etc/nginx/ssl:ro
      - frontend_build:/usr/share/nginx/html
    depends_on:
      - frontend
      - backend
    networks:
      - app_network

  redis:
    image: redis:alpine
    restart: always
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - app_network

  backup:
    image: mongo:latest
    restart: always
    volumes:
      - mongodb_backup:/backup
      - ./scripts:/scripts
    command: ["/scripts/backup.sh"]
    networks:
      - db_network

networks:
  app_network:
    driver: bridge
  db_network:
    driver: bridge
    internal: true

volumes:
  backend_data:
    driver: local
    driver_opts:
      type: none
      device: /mnt/data/backend
      o: bind
  mongodb_data:
    driver: local
    driver_opts:
      type: none
      device: /mnt/data/mongodb
      o: bind
  mongodb_config:
  mongodb_backup:
  redis_data:
  frontend_build:
